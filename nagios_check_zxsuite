#!/usr/bin/perl

use warnings;
use strict;
use autodie;
use feature 'say';

use lib '/usr/lib/nagios/plugins';
use utils qw /%ERRORS/;

my $CMD_CHECK_UPDATE = 'cat example/zimbra_update_check.txt';
my $CMD_CHECK_LICENSE = 'cat example/zimbra_licence.txt';

my $NAGIOS_EXTRA = '';
my $NAGIOS_ERR = '';
my $NAGIOS_STATUS = 'OK';


# updates nagios status
sub update_status($$) {
    my ($level, $msg) = @_;
    $NAGIOS_STATUS = $level if $ERRORS{$level} > $ERRORS{$NAGIOS_STATUS};	# things can only can go from bad to worse, not the other way around
    my $extra = ''; $extra = ', ' if $NAGIOS_ERR;
    $NAGIOS_ERR .= $extra . $msg;
}

#
# check for updates
#
my %Z = ();
open my $cmd_update, '-|', $CMD_CHECK_UPDATE;
while (<$cmd_update>) {
    next if /^\s*$/;	# skip empty lines
    chomp;
    my ($key, $value) = split (' ', $_, 2);
    $key =~ s/current/Current/;		# fix case so it is always mixed
    $key =~ s/available/Available/;
#    say "  key $key = $value";
    $Z{$key} = $value;
}


$NAGIOS_EXTRA .= "lastUpdate: $Z{'lastUpdate'}";

foreach my $cur (grep {/CurrentVersion/} keys %Z) {	# list all current versions
    my $avail = $cur; 
    $avail =~ s/Current/Available/;
    
    if (!defined($Z{$avail})) { die "can't find available_ counterpart to current key $cur" }
    if ($Z{$cur} ne $Z{$avail}) {
            update_status ('WARNING', "Update $avail: $Z{$avail}");
    }
    $NAGIOS_EXTRA .= ", $cur: $Z{$cur} => $Z{$avail}";
    
#    say "current $cur = $Z{$cur} => $avail = $Z{$avail}";
}

#
# check licenses
#

my %LIC = ();
open my $cmd_lic, '-|', $CMD_CHECK_LICENSE;
my $module = '';
my $m_spaces = '__NEVERHAPPENS__';
while (<$cmd_lic>) {
    next if /^\s*$/;	# skip empty lines
    chomp;
        
#    say "  lic $_";
    
    if (/^$m_spaces\S/) {
        #say 'detected modules end';
        $module = '';
        $m_spaces = '__NEVERHAPPENS__';
    } elsif (/^(\s+)modules\s*$/) {
        $m_spaces = $1;
       #say 'detected modules start';
    }
    
    
    my ($key, $value) = split (' ', $_, 2);
    if ($value eq '') {
        #say "value not defined for key=$key, assume module name";
        $module = $key;
    } else {
        my $fullkey = ($module?"${module}__":'') . $key;
        $LIC{$fullkey} = $value;
        say "\t$fullkey = $value";
    }
}


print "$NAGIOS_STATUS";
print ": $NAGIOS_ERR" if $NAGIOS_ERR;
print "|$NAGIOS_EXTRA" if $NAGIOS_EXTRA;
print "\n";
exit $ERRORS{$NAGIOS_STATUS};
